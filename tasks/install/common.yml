---
# Install tasks common to all distros

- block:
    - name: remove obsolete docker operating system packages
      package:
        name: "{{ item }}"
        state: absent
      loop: >-
        {{ docker_engine_obsolete_os_packages[distro_packages_key] }}

    - name: install required operating system packages
      package:
        name: "{{ item }}"
        state: present
      loop: >-
        {{ docker_engine_os_packages[distro_packages_key] }}
      notify:
        - restart docker
        - restart docker storage

    - name: remove obsolete python packages
      pip:
        name: "{{ item }}"
        state: absent
      loop: >-
        {{ docker_engine_obsolete_python_packages[distro_packages_key] }}
      environment: "{{ docker_engine_http_proxy_environment }}"

    - name: install required python packages
      pip:
        name: "{{ item }}"
        state: present
        extra_args: "{{ docker_engine_pip_extra_args }}"
      loop: "{{ docker_engine_python_packages[distro_packages_key] }}"
      environment: "{{ docker_engine_http_proxy_environment }}"

    - name: create directory for local socket
      file:
        path: "{{ docker_engine_socket | dirname }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      when: docker_engine_socket | length > 0

    - name: create directory for http/https proxy config file in systemd
      file:
        path: "{{ docker_engine_systemd_proxy_config | dirname }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      when:
        - ansible_facts.service_mgr == "systemd"
        - >-
          docker_engine_http_proxy | default('') | length > 0
          or docker_engine_https_proxy | default('') | length > 0
          or docker_engine_no_proxy | default('') | length > 0
  vars:
    distro_packages_key: >-
      {{ ansible_facts.distribution
         | lower
         + "_" + ansible_facts.distribution_major_version }}
  tags:
    - role::docker_engine
    - role::docker_engine::packages
    - role::docker_engine::install
